spring.application.name=trucker

# Cost-Effective Database Configuration
spring.datasource.url=${rds.url}

# RDS Configuration
spring.datasource.username=${rds.username}

# SSL Configuration
spring.datasource.properties.useSSL=true
spring.datasource.properties.requireSSL=true
spring.datasource.properties.verifyServerCertificate=true
spring.datasource.properties.sslmode=require

# AWS Configuration
spring.datasource.aws.access-key=${rds.aws.accessKey}
spring.datasource.aws.secret-key=${rds.aws.secretKey}
spring.datasource.aws.region=${rds.aws.region}

# RDS Instance Configuration
spring.datasource.rds.instance-type=${rds.instance.type}
spring.datasource.rds.multi-az=${rds.multi_az}
spring.datasource.rds.storage-type=${rds.storage_type}
spring.datasource.rds.storage-size=${rds.storage_size}
spring.datasource.rds.max-connections=${rds.max_connections}

# RDS Proxy Configuration (Disabled)
spring.datasource.rds.proxy.enabled=${rds.proxy.enabled}

# Database Backup Configuration
spring.datasource.backup.enabled=${rds.backup.enabled}
spring.datasource.backup.schedule=${rds.backup.schedule}
spring.datasource.backup.retention-days=${rds.backup.retentionDays}
spring.datasource.backup.bucket-name=${rds.backup.bucketName}
spring.datasource.backup.use-iam-role=${rds.backup.use_iam_role}

# Database Encryption (Disabled)
spring.datasource.encryption.enabled=${rds.encryption.enabled}

# Database Monitoring (Basic)
spring.datasource.monitoring.enabled=${rds.monitoring.enabled}
spring.datasource.monitoring.metrics-interval=${rds.monitoring.metricsInterval}
spring.datasource.monitoring.alert-threshold.cpu=${rds.monitoring.alertThresholdCpu}
spring.datasource.monitoring.alert-threshold.memory=${rds.monitoring.alertThresholdMemory}

# Database Failover (Disabled)
spring.datasource.failover.enabled=${rds.failover.enabled}
spring.datasource.failover.region-backup=${rds.failover.regionBackup}
spring.datasource.failover.instance-type=${rds.failover.instanceType}

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

# AWS RDS Proxy Configuration
spring.datasource.hikari.data-source-properties.proxyHost=${RDS_PROXY_HOST}
spring.datasource.hikari.data-source-properties.proxyPort=${RDS_PROXY_PORT}

# HikariCP Configuration
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.pool-name=TruckerDBPool
spring.datasource.hikari.validation-timeout=5000

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=${ADMIN_PASSWORD:admin123}

# JWT Configuration
jwt.secret=${JWT_SECRET:your-256-bit-secret}
jwt.expiration=86400000

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.aditya.trucker=DEBUG
logging.level.org.flywaydb=INFO

# Server Configuration
server.port=8080
server.error.include-message=always
server.error.include-binding-errors=always

# Cache Configuration
spring.cache.type=simple

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Database Configuration
spring.datasource.url=jdbc:h2:mem:truckerdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Application Properties
app.version=1.0.0
app.name=Trucker-Project

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.aditya.trucker=DEBUG

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Server Configuration
server.port=8080
